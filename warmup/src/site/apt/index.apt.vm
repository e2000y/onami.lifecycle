                                    ------
                                    Home
                                    ------
                                    The Apache Onami developers team
                                    ------
                                     2012

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Welcome to Apache Onami-Lifecycle Warm Up!

 Methods annotated with <<@WarmUp>> will be called in parallel
 (using the Java Fork-Join framework). Object
 dependencies are respected – i.e. given:

[./images/abc.png]

 * Object A is dependent on objects B and C and all have warm up methods.

 * Object A’s warm up method will not be executed until both objects B and C’s warm up methods complete.

 * Objects B and C’s warm up methods will execute in parallel.

 Warm up methods are use for things such as cache warming, etc. i.e. tasks that happen after an
 object is constructed, that take some time and can execute in parallel.

Before starting

  Lifecycle Warm Up is available on the Maven Central repo, you just need to add the dependency below in your <<<pom.xml>>> file:

+--------------------------------------+
<dependencies>
  ...
  <dependency>
    <groupId>${project.groupId}</groupId>
    <artifactId>${project.artifactId}</artifactId>
    <version>${project.version}</version>
  </dependency>
  ...
</dependencies>
+--------------------------------------+
